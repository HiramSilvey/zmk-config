/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// layers
#define DEFAULT 0
#define LOWER 1
#define FN 2
#define QWERTY 3
#define MAGIC 4

/ {
    behaviors {
        hs_excl: hs_exclamation_at {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp EXCL>, <&kp AT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hs_ques: hs_question_dollar {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp DLLR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hs_fslsh: hs_fslash_hash {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp FSLH>, <&kp HASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hs_perc: hs_percent_caret {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp PRCNT>, <&kp CARET>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        hs_astr: hs_asterisk_ampersand {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp STAR>, <&kp AMPS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | BRDN  | BRUP | PREV | NEXT | PP   |                                                               | MUTE | VLDN | VLUP | PSBK |  INS  |
            // | ESC   | ESC  | ! @  | ? $  | / #  |  `   |                                                 |  % ^ |  \   |  * & |  =   |  DEL |  DEL  |
            // | TAB   |  '   |  ,   |  .   |  P   |  Y   |                                                 |  F   |  G   |  C   |  R   |  L   |  RET  |
            // | LOWER |  A   |  O   |  E   |  U   |  I   |                                                 |  D   |  H   |  T   |  N   |  S   |  -    |
            // | LSHFT |  ;   |  Q   |  J   |  K   |  X   | LSHFT | TAB   | LCTRL | | RALT  | RET   | RSHFT |  B   |  M   |  W   |  V   |  Z   | RSHFT |
            // | MAGIC | HOME |  (   |  )   | PGUP |      | SPACE | LALT  | LGUI  | | RGUI  | RCTRL | BSPC  |      | PGDN |  [   |  ]   |  END | PSCRN |

            bindings = <
            &kp C_BRI_DN  &kp C_BRI_UP  &kp C_PREV  &kp C_NEXT  &kp C_PP                                                                                           &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp PAUSE_BREAK  &kp INS
            &kp ESC       &kp ESC       &hs_excl    &hs_ques    &hs_fslsh   &kp GRAVE                                                                  &hs_perc    &kp BSLH    &hs_astr      &kp EQUAL     &kp DEL          &kp DEL
            &kp TAB       &kp APOS      &kp COMMA   &kp DOT     &kp P       &kp Y                                                                      &kp F       &kp G       &kp C         &kp R         &kp L            &kp RET
            &mo LOWER     &kp A         &kp O       &kp E       &kp U       &kp I                                                                      &kp D       &kp H       &kp T         &kp N         &kp S            &kp MINUS
            &kp LSHFT     &kp SEMI      &kp Q       &kp J       &kp K       &kp X   &kp LSHFT  &kp TAB    &kp LCTRL  &kp RALT   &kp RET    &kp RSHFT   &kp B       &kp M       &kp W         &kp V         &kp Z            &kp RSHFT
            &mo MAGIC     &kp HOME      &kp LPAR    &kp RPAR    &kp PG_UP           &kp SPACE  &kp LALT   &kp LGUI   &kp RGUI   &kp RCTRL  &kp BSPC                &kp PG_DN   &kp LBKT      &kp RBKT      &kp END          &kp PSCRN
            >;
        };

        lower_layer {
            bindings = <
            &trans       &trans  &trans    &trans    &trans                                                                        &trans      &trans        &trans         &trans           &trans
            &tog QWERTY  &trans  &trans    &trans    &trans     &trans                                                  &kp LPAR   &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
            &trans       &trans  &trans    &kp UP    &trans     &trans                                                  &kp RPAR   &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
            &trans       &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &mo FN                                                  &kp PRCNT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
            &trans       &trans  &trans    &trans    &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
            &trans       &trans  &trans    &trans    &trans             &trans  &trans  &trans  &trans  &trans  &trans             &kp KP_N0   &kp KP_N0     &kp KP_DOT     &kp KP_ENTER     &trans
            >;
        };

        fn_layer {
            bindings = <
            &trans  &trans  &trans  &trans  &trans                                                                  &trans   &trans   &trans   &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &kp F10  &kp F11  &kp F12  &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &kp F7   &kp F8   &kp F9   &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &kp F4   &kp F5   &kp F6   &trans  &trans
            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F1   &kp F2   &kp F3   &trans  &trans
            &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans   &trans   &trans   &trans  &trans
            >;
        };

        qwerty_layer {
            bindings = <
            &trans  &trans  &trans  &trans  &trans                                                                  &trans   &trans     &trans   &trans     &trans
            &trans  &trans  &trans  &trans  &trans  &trans                                                  &trans  &trans   &trans     &trans   &trans     &trans
            &trans  &kp Q   &kp W   &kp E   &kp R   &kp T                                                   &kp Y   &kp U    &kp I      &kp O    &kp P      &trans
            &trans  &kp A   &kp S   &kp D   &kp F   &kp G                                                   &kp H   &kp J    &kp K      &kp L    &kp SEMI   &kp APOS
            &trans  &kp Z   &kp X   &kp C   &kp V   &kp B   &trans  &trans  &trans  &trans  &trans  &trans  &kp N   &kp M    &kp COMMA  &kp DOT  &kp SLASH  &trans
            &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans          &trans   &trans     &trans   &trans     &trans
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &none
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };
    };
};
